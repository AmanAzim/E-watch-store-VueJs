{"remainingRequest":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\babel-loader\\lib\\index.js!D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\src\\components\\Modal.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\src\\components\\Modal.vue","mtime":1560129019691},{"path":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VueJs-Training\\E-Watch-Store-Vue-Js\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ButtonContainerDark } from \"../components/styledComponentButtons\";\nimport BackDrop from \"./Backdrop.vue\";\nexport default {\n  components: {\n    ButtonContainerDark: ButtonContainerDark,\n    BackDrop: BackDrop\n  },\n  computed: {\n    modalProduct: function modalProduct() {\n      return this.$store.getters.modalProduct;\n    }\n  },\n  methods: {\n    onCloseModal: function onCloseModal() {\n      this.$store.dispatch('closeModal');\n    }\n  }\n};",{"version":3,"sources":["Modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,SAAA,mBAAA;AACA,OAAA,QAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,mBAAA,EAAA,mBADA;AAEA,IAAA,QAAA,EAAA;AAFA,GADA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,YAAA;AACA;AAHA,GALA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,YAAA;AACA;AAHA;AAVA,CAAA","sourcesContent":["<template>\r\n    <span>\r\n        <transition name=\"myModal\" type=\"animation\">\r\n           <div class=\"ModalContainer\" v-if=\"$store.state.modalOpen\">\r\n             <div class=\"container\">\r\n                <div class=\"row\">\r\n                   <div class=\"col-8 col-md-6 col-lg-4 p-5 mx-auto text-center\" id=\"modal\">\r\n                       <h5>Item added to the cart</h5>\r\n\r\n                       <img v-bind:src=\"modalProduct.img\" class=\"img-fluid\" alt=\"Product Image\"></img>\r\n\r\n                       <h5>{{modalProduct.title}}</h5>\r\n\r\n                       <h5 class=\"text-muted\">Price: ${{modalProduct.price}}</h5>\r\n\r\n                       <router-link v-bind:to=\"$route.path\">\r\n                           <ButtonContainerDark v-on:click=\"onCloseModal()\">Continue Shopping</ButtonContainerDark>\r\n                       </router-link>\r\n\r\n                       <router-link to=\"/cart\"><ButtonContainerDark cart v-on:click=\"onCloseModal()\">Go to Cart</ButtonContainerDark></router-link>\r\n                   </div>\r\n                </div>\r\n             </div>\r\n           </div>\r\n        </transition>\r\n\r\n        <BackDrop :show=\"$store.state.modalOpen\" :key=\"$store.state.modalOpen\"/> {{/*:key=\"condition\" it is added so that when the Key*condition changes the component gets rerender and load with deffferent properties depending on the changed condition. React does it normally but vue needs :key=\"\" for this rerendering component on props update */}}\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nimport { ButtonContainerDark } from '../components/styledComponentButtons'\r\nimport BackDrop from './Backdrop.vue'\r\nexport default {\r\n  components: {\r\n    ButtonContainerDark,\r\n    BackDrop\r\n  },\r\n  computed: {\r\n    modalProduct () {\r\n      return this.$store.getters.modalProduct\r\n    }\r\n  },\r\n  methods: {\r\n    onCloseModal () {\r\n      this.$store.dispatch('closeModal')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .ModalContainer {\r\n        position: fixed;\r\n        top:0;\r\n        left:0;\r\n        bottom: 0;\r\n        right: 0;\r\n        background: transparent;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 100;\r\n    }\r\n\r\n    #modal {\r\n        background: var(--mainWhite);\r\n    }\r\n\r\n    .myModal-enter {}\r\n    .myModal-enter-active {\r\n        animation: openModal 0.4s ease-out forwards;\r\n    }\r\n    .myModal-leave {}\r\n    .myModal-leave-active {\r\n        animation: closeModal 0.7s ease-out forwards;\r\n    }\r\n\r\n    @keyframes openModal {\r\n        0%{\r\n            opacity: 0;\r\n            transform: translateY(-200%);\r\n        }\r\n        50%{\r\n            opacity: 0.8;\r\n            transform: translateY(50%);\r\n        }\r\n        100%{\r\n            opacity: 1;\r\n            transform: translateY(0%);\r\n        }\r\n    }\r\n    @keyframes closeModal {\r\n        0%{\r\n            opacity: 1;\r\n            transform: translateY(0);\r\n        }\r\n        50%{\r\n            opacity: 0.8;\r\n            transform: translateY(50%);\r\n        }\r\n        100%{\r\n            opacity: 0;\r\n            transform: translateY(-200%);\r\n        }\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/components"}]}